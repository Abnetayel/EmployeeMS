@model CombinedDashboardViewModel

<div class="container py-5">
    <h1 class="mb-4">Data Analayze</h1>

    <!-- Scrollable Section -->
    <div class="row" style="max-height: 80vh; overflow-y: auto;">
        <!-- First Dashboard -->
        <div class="col-12">
            <h2 class="mb-4">Dashboard</h2>
            <div class="row">
                <!-- Total Employees -->
                <div class="col-md-4">
                    <div class="card text-white bg-primary mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Total Employees</h5>
                            <p class="card-text display-4">@Model.TotalEmployees</p>
                        </div>
                    </div>
                </div>
                <!-- Average Salary -->
                <div class="col-md-4">
                    <div class="card text-white bg-success mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Average Salary</h5>
                            <p class="card-text display-4">$@Model.AverageSalary.ToString("N2")</p>
                        </div>
                    </div>
                </div>

                <!-- Gender Distribution -->
                <div class="col-md-4">
                    <div class="card text-white bg-info mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Gender Distribution</h5>
                            <canvas id="genderChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Second Dashboard -->
        <div class="col-12 mt-5">
            <h2 class="mb-4">Advanced Dashboard</h2>
            <div class="row">
                <!-- Top Countries -->
                <div class="col-md-8">
                    <div class="card mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Top 5 Countries by Employee Count</h5>
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Country</th>
                                        <th>Employee Count</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var country in Model.TopCountries)
                                    {
                                        <tr>
                                            <td>@country.Country</td>
                                            <td>@country.Count</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- Recent Hires -->
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Recent Hires</h5>
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Full Name</th>
                                        <th>Position</th>
                                        <th>Date of Registration</th>
                                        <th>Country</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var hire in Model.RecentHires)
                                    {
                                        <tr>
                                            <td>@hire.FullName</td>
                                            <td>@hire.Skills</td>
                                            <td>@hire.DateOfRegistration.ToShortDateString()</td>
                                            <td>@hire.Country</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-12 mt-5">
    <h2 class="mb-4">Skills and Experience</h2>
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Average Experience by Skill</h5>
            <canvas id="skillsExperienceChart"></canvas>
        </div>
    </div>
</div>

<div class="col-12 mt-5"> 
    <h2 class="mb-4">Monthly Attendance Trends</h2> 
     <div class="card"> 
         <div class="card-body"> 
            <h5 class="card-title">Attendance Trends</h5> 
             <canvas id="attendanceTrendsChart"></canvas> 
        </div> 
     </div> 
 </div> 


@* <div> *@
@*     <canvas id="attendanceChart" width="400" height="200"></canvas> *@
@* </div> *@

@* <div class="col-12 mt-5"> *@
@*     <h2 class="mb-4">Task Completion by Employee</h2> *@
@*     <div class="card"> *@
@*         <div class="card-body"> *@
@*             <h5 class="card-title">Task Completion Overview</h5> *@
@*             <canvas id="taskCompletionChart"></canvas> *@
@*         </div> *@
@*     </div> *@
@* </div> *@

@section Scripts {
    <script>
        // Gender Distribution Chart
        const genderCtx = document.getElementById('genderChart').getContext('2d');
        const genderData = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.GenderDistribution.Select(g => g.Gender))),
            datasets: [{
                label: 'Gender Distribution',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.GenderDistribution.Select(g => g.Count))),
                backgroundColor: ['#007bff', '#28a745', '#ffc107'],
            }]
        };
        new Chart(genderCtx, {
            type: 'pie',
            data: genderData,
        });


          // Skills and Experience Chart
        const skillsCtx = document.getElementById('skillsExperienceChart').getContext('2d');
        const skillsData = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.SkillsExperience.Select(s => s.Skill))),
            datasets: [{
                label: 'Average Experience (Years)',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.SkillsExperience.Select(s => s.AverageExperience))),
                backgroundColor: '#007bff',
                borderColor: '#0056b3',
                borderWidth: 1
            }]
        };
        new Chart(skillsCtx, {
            type: 'bar',
            data: skillsData,
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

           const attendanceCtx = document.getElementById('attendanceTrendsChart').getContext('2d');  
           const attendanceData = {  
              labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.MonthlyAttendanceTrends?.Select(t => t.Month) ?? Enumerable.Empty<string>())),  
              datasets: [  
                  {  
                      label: 'Present Days',  
                      data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.MonthlyAttendanceTrends?.Select(t => t.PresentDays) ?? Enumerable.Empty<int>())),  
                      backgroundColor: '#28a745',  
                      borderColor: '#1e7e34',  
                      borderWidth: 1  
                  },  
                  {  
                      label: 'Absent Days',  
                      data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.MonthlyAttendanceTrends?.Select(t => t.AbsentDays) ?? Enumerable.Empty<int>())),  
                      backgroundColor: '#dc3545',  
                      borderColor: '#bd2130',  
                      borderWidth: 1  
                  }  
              ]  
           };  
           new Chart(attendanceCtx, {  
              type: 'bar',  
              data: attendanceData,  
              options: {  
                  scales: {  
                      y: {  
                          beginAtZero: true  
                      }  
                  }  
              }  
           });



        




    </script>
}
